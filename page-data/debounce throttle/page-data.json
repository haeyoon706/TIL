{"componentChunkName":"component---src-templates-post-jsx","path":"/debounce throttle/","result":{"data":{"site":{"siteMetadata":{"title":"haeyoon"}},"markdownRemark":{"id":"6547daeb-539b-5aad-8662-d7250490b90f","excerpt":"Debounce란 연속적으로 발생한 이벤트를 하나로 처리하는 방식\n입력이 계속 들어오면 실행 타이머가 계속 초기화 됨\n 예제 input 이벤트 함수를 타이핑 할 때마다가 아닌 입력을 멈춘 후 일정 시간이 지난 후 실행 resize 이벤트 함수를 resize 할 때마다가 아닌 resize 완료 후 실행\n Throttle란 이벤트를 일정한 주기마다 발생하도록…","html":"<h2>Debounce란</h2>\n<p>연속적으로 발생한 이벤트를 하나로 처리하는 방식<br>\n입력이 계속 들어오면 실행 타이머가 계속 초기화 됨\n<br/><br/></p>\n<h3>예제</h3>\n<ul>\n<li>input 이벤트 함수를 타이핑 할 때마다가 아닌 입력을 멈춘 후 일정 시간이 지난 후 실행</li>\n<li>resize 이벤트 함수를 resize 할 때마다가 아닌 resize 완료 후 실행\n<br/><br/></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// debounce를 사용한 훅</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useEffect<span class=\"token punctuation\">,</span> useState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * 입력이 멈춘 후 일정 시간이 지나면 값을 업데이트하는 Debounce 훅\n * @param value 변경되는 값 (ex: input 값)\n * @param delay 지연 시간 (기본값: 500ms)\n * @returns delay 후에 업데이트된 값\n */</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">useDebounce</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> any<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">delay</span><span class=\"token operator\">:</span> number <span class=\"token operator\">=</span> <span class=\"token number\">500</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>debouncedValue<span class=\"token punctuation\">,</span> setDebouncedValue<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// delay 후에 debouncedValue를 업데이트하는 타이머 설정</span>\n    <span class=\"token keyword\">const</span> handler <span class=\"token operator\">=</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">setDebouncedValue</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> delay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 값이 변경될 때마다 기존 타이머를 제거하고 새로운 타이머 시작 (즉, 입력 중이면 실행되지 않음)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">clearTimeout</span><span class=\"token punctuation\">(</span>handler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>value<span class=\"token punctuation\">,</span> delay<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> debouncedValue<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>Throttle란</h2>\n<p>이벤트를 일정한 주기마다 발생하도록 하는 방식<br>\n마지막 입력 여부와 관계없이 주어진 간격마다 실행\n<br/><br/></p>\n<h3>예제</h3>\n<ul>\n<li>일정 시간마다 scroll 감지</li>\n<li>실시간 UI 업데이트\n<br/><br/></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// throttle를 사용한 훅</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useEffect<span class=\"token punctuation\">,</span> useState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * 일정 간격마다 값이 업데이트되는 Throttle 훅\n * @param value 변경되는 값 (ex: 입력값, 스크롤 값)\n * @param limit 실행 간격 시간 (기본값: 500ms)\n * @returns 일정 간격마다 업데이트된 값\n */</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">useThrottle</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> any<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">limit</span><span class=\"token operator\">:</span> number <span class=\"token operator\">=</span> <span class=\"token number\">500</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>throttledValue<span class=\"token punctuation\">,</span> setThrottledValue<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>lastUpdated<span class=\"token punctuation\">,</span> setLastUpdated<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> now <span class=\"token operator\">=</span> Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 마지막 업데이트 이후 limit(ms) 시간이 지나면 실행</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>now <span class=\"token operator\">-</span> lastUpdated <span class=\"token operator\">>=</span> limit<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">setThrottledValue</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">setLastUpdated</span><span class=\"token punctuation\">(</span>now<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>value<span class=\"token punctuation\">,</span> limit<span class=\"token punctuation\">,</span> lastUpdated<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> throttledValue<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>비교</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th><strong>Debounce</strong></th>\n<th><strong>Throttle</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>📌 실행 시점</td>\n<td>입력이 멈춘 후 일정 시간이 지나야 실행됨</td>\n<td>일정한 시간 간격마다 실행됨</td>\n</tr>\n<tr>\n<td>🛠️ 사용 사례</td>\n<td>검색어 자동완성, 버튼 중복 클릭 방지</td>\n<td>스크롤 감지, 실시간 UI 업데이트</td>\n</tr>\n<tr>\n<td>✅ 장점</td>\n<td>불필요한 API 호출 방지</td>\n<td>성능 최적화 (이벤트 과부하 방지)</td>\n</tr>\n</tbody>\n</table>\n<h2>참고</h2>\n<ul>\n<li><a href=\"https://velog.io/@jiynn_12/Debounce-%EC%99%80-throttle-%EC%97%90-%EB%8C%80%ED%95%B4-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B3%A0-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EC%97%90-%EC%A0%81%EC%9A%A9%ED%95%B4%EB%B3%B4%EC%9E%90\">https://velog.io/@jiynn_12/Debounce-%EC%99%80-throttle-%EC%97%90-%EB%8C%80%ED%95%B4-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B3%A0-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EC%97%90-%EC%A0%81%EC%9A%A9%ED%95%B4%EB%B3%B4%EC%9E%90</a></li>\n</ul>","frontmatter":{"title":"Debounce / Throttle","date":"March 17, 2025","update":"March 17, 2025","tags":["javascript"],"series":"javascript 최적화"},"fields":{"slug":"/debounce throttle/","readingTime":{"minutes":2.93}}},"seriesList":{"edges":[{"node":{"id":"6547daeb-539b-5aad-8662-d7250490b90f","fields":{"slug":"/debounce throttle/"},"frontmatter":{"title":"Debounce / Throttle"}}}]},"previous":{"fields":{"slug":"/closure_2/"},"frontmatter":{"title":"Closure (2)"}},"next":null},"pageContext":{"id":"6547daeb-539b-5aad-8662-d7250490b90f","series":"javascript 최적화","previousPostId":"2adeea1f-bb0a-5674-b897-89011f1cd5e1","nextPostId":null}},"staticQueryHashes":[],"slicesMap":{}}