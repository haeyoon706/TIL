{"componentChunkName":"component---src-templates-post-jsx","path":"/isr/","result":{"data":{"site":{"siteMetadata":{"title":"haeyoon"}},"markdownRemark":{"id":"886dffb4-2659-5197-afa9-aed7a4a4960b","excerpt":"들어가며 React와 Next.js를 사용한 여러 프로젝트를 진행하면서 CSR, SSR, SSG 렌더링 기법은 익숙하지만\nISR 기법은 사용해보지 않아서 여러 아티클과 예제를 보며 포스팅을 써보겄읍니다. ISR(Incremental Static Regeneration)이란 “정적 페이지를 부분적으로 다시 생성하는 렌더링 방식” ISR은 SSG(정적 생성)…","html":"<h2>들어가며</h2>\n<p>React와 Next.js를 사용한 여러 프로젝트를 진행하면서 CSR, SSR, SSG 렌더링 기법은 익숙하지만\nISR 기법은 사용해보지 않아서 여러 아티클과 예제를 보며 포스팅을 써보겄읍니다.</p>\n<h2>ISR(Incremental Static Regeneration)이란</h2>\n<blockquote>\n<p><strong>“정적 페이지를 부분적으로 다시 생성하는 렌더링 방식”</strong></p>\n</blockquote>\n<p>ISR은 SSG(정적 생성)와 SSR(서버 렌더링)의 중간 형태로<br>\n특정 주기마다 정적 페이지를 <strong>부분적으로 갱신(revalidate)</strong> 하여<br>\n최신 데이터를 유지하면서도 빠른 응답 속도를 제공</p>\n<p>Next.js 서버는 사용자가 접근한 페이지의 <strong>캐시된 HTML을 우선 반환</strong>하고,<br>\n<code class=\"language-text\">revalidate</code>로 지정된 시간이 지나면 <strong>백그라운드에서 새 페이지를 생성</strong><br>\n이렇게 새로 만들어진 페이지는 이후 요청 시 곧바로 제공되어,<br>\nSSR처럼 최신 데이터를 보여주면서도 SSG처럼 빠르게 동작하게 됨</p>\n<h2>ISR 사용 방법</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> Link <span class=\"token keyword\">from</span> <span class=\"token string\">\"next/link\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> getAllPosts <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@/lib/posts\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">PostList</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> posts <span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">posts</span><span class=\"token operator\">:</span> any<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>main<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>게시글 목록<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>ul<span class=\"token operator\">></span>\n        <span class=\"token punctuation\">{</span>posts<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">post</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n          <span class=\"token operator\">&lt;</span>li key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>post<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>Link href<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/posts/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>post<span class=\"token punctuation\">.</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span>post<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Link<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ul<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>main<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getStaticProps</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> posts <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">getAllPosts</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">props</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> posts <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">revalidate</span><span class=\"token operator\">:</span> <span class=\"token number\">120</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 2분마다 최신 목록으로 업데이트</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>ISR의 한계</h2>\n<blockquote>\n<p>ISR은 자주 읽히지만 가끔만 업데이트되는 페이지(블로그, 뉴스, 상품 상세)에 적합</p>\n</blockquote>\n<h3>1.실시간 데이터 반영 어려움</h3>\n<ul>\n<li><code class=\"language-text\">revalidate</code> 주기 동안 페이지는 캐시 상태 유지</li>\n<li>댓글, 재고, 채팅 등 실시간성이 필요한 서비스에는 부적합</li>\n</ul>\n<h3>2. 첫 요청 지연</h3>\n<ul>\n<li><code class=\"language-text\">fallback: \"blocking\"</code> 사용 시 처음 요청은 서버에서 렌더링 후 반환</li>\n<li>초기 요청 속도는 SSG보다 느릴 수 있음</li>\n</ul>\n<h3>3. 외부 데이터 변경 감지 한계</h3>\n<ul>\n<li><code class=\"language-text\">revalidate</code>는 시간 기반 갱신</li>\n<li>데이터가 바뀌어도 즉시 반영되지 않음 → 필요 시 <strong>on-demand revalidate</strong> 사용</li>\n</ul>\n<h2>참고</h2>\n<ul>\n<li><a href=\"https://velog.io/@codns1223/Nextjs-ISR-Incremental-Static-Regeneration%EC%9D%B4%EB%9E%80\">https://velog.io/@codns1223/Nextjs-ISR-Incremental-Static-Regeneration%EC%9D%B4%EB%9E%80</a></li>\n<li><a href=\"https://tech.kakao.com/posts/743\">https://tech.kakao.com/posts/743</a></li>\n</ul>","frontmatter":{"title":"Next.js의 ISR","date":"October 08, 2025","update":"October 08, 2025","tags":["Next.js"],"series":"Next.js의 렌더링 기법"},"fields":{"slug":"/isr/","readingTime":{"minutes":2.625}}},"seriesList":{"edges":[{"node":{"id":"886dffb4-2659-5197-afa9-aed7a4a4960b","fields":{"slug":"/isr/"},"frontmatter":{"title":"Next.js의 ISR"}}}]},"previous":{"fields":{"slug":"/debounce throttle/"},"frontmatter":{"title":"Debounce / Throttle"}},"next":{"fields":{"slug":"/tldr/"},"frontmatter":{"title":"자바스크립트 한 줄 꿀팁"}}},"pageContext":{"id":"886dffb4-2659-5197-afa9-aed7a4a4960b","series":"Next.js의 렌더링 기법","previousPostId":"6547daeb-539b-5aad-8662-d7250490b90f","nextPostId":"fcd9eac8-69f6-5253-bba0-baa727dae3aa"}},"staticQueryHashes":[],"slicesMap":{}}